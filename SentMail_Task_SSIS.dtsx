<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/21/2024 9:59:52 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="ITT-KARAN-D"
  DTS:CreatorName="INTIMETEC\karan.dey"
  DTS:DTSID="{07816DFE-B399-48CB-A238-B52675172382}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5556.0"
  DTS:LocaleID="16393"
  DTS:ObjectName="SentMail_Task"
  DTS:PackageType="5"
  DTS:VersionBuild="20"
  DTS:VersionGUID="{08E307EA-F4DA-4078-9812-2C1FD069B414}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ITT-KARAN-D.Test_DB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{93C00A97-1C66-41EB-9AB3-8A8C8C4E034C}"
      DTS:ObjectName="ITT-KARAN-D.Test_DB">
      <DTS:PropertyExpression
        DTS:Name="ServerName">@[$Project::PServerName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=ITT-KARAN-D;Initial Catalog=Test_DB;Provider=SQLOLEDB.1;Integrated Security=SSPI;Application Name=SSIS-Package-{93C00A97-1C66-41EB-9AB3-8A8C8C4E034C}ITT-KARAN-D.Test_DB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{422FBA17-3178-4F77-82A0-956C20928292}"
      DTS:ObjectName="ExecuteSQLTask1_BypassPrepare">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{3829BF09-8DAE-446A-A38A-E3E7EDDCC681}"
      DTS:ObjectName="ExecuteSQLTask1_BypassPrepare1">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:DTSID="{C9DA5048-24E1-4075-9413-A840C4C5F16F}"
      DTS:ObjectName="ExecuteSQLTask1_BypassPrepare2">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">-1</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{00D97BB8-0205-4C05-B7FC-EDD6BE753207}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="HTMLBody">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A27B1E3E-5B25-43F3-AE65-D797243EE143}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ResultSet">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6504E8D1-62B1-4693-BB46-3DA4A639AB2C}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TableRowCount">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6210AEB4-F149-4C03-8C58-6BE80AA94FEA}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{93C00A97-1C66-41EB-9AB3-8A8C8C4E034C}"
          SQLTask:SqlStatementSource="SET NOCOUNT ON;&#xA;&#xA;-- Create a temporary table to store the results&#xA;CREATE TABLE #Results (&#xA;    DB_Name NVARCHAR(128),&#xA;    Table_Name NVARCHAR(128),&#xA;    Record_Count BIGINT&#xA;)&#xA;&#xA;-- Declare variables&#xA;DECLARE @DBName NVARCHAR(128)&#xA;DECLARE @SQL NVARCHAR(MAX)&#xA;&#xA;-- Cursor to iterate over all databases&#xA;DECLARE db_cursor CURSOR LOCAL FAST_FORWARD FOR&#xA;SELECT name &#xA;FROM sys.databases&#xA;WHERE state_desc = 'ONLINE' &#xA;  AND name NOT IN ('master', 'tempdb', 'model', 'msdb')&#xA;&#xA;-- Open the cursor&#xA;OPEN db_cursor&#xA;FETCH NEXT FROM db_cursor INTO @DBName&#xA;&#xA;-- Loop through the databases&#xA;WHILE @@FETCH_STATUS = 0&#xA;BEGIN&#xA;    BEGIN TRY&#xA;        -- Construct the dynamic SQL for the current database&#xA;        SET @SQL = N'&#xA;        USE ' + QUOTENAME(@DBName) + N';&#xA;        INSERT INTO #Results (DB_Name, Table_Name, Record_Count)&#xA;        SELECT &#xA;            DB_NAME() AS DB_Name, &#xA;            QUOTENAME(s.name) + N''.'' + QUOTENAME(t.name) AS Table_Name, &#xA;            SUM(p.rows) AS Record_Count&#xA;        FROM ' + QUOTENAME(@DBName) + N'.sys.tables t&#xA;        JOIN ' + QUOTENAME(@DBName) + N'.sys.schemas s ON t.schema_id = s.schema_id&#xA;        JOIN ' + QUOTENAME(@DBName) + N'.sys.partitions p ON t.object_id = p.object_id&#xA;        JOIN ' + QUOTENAME(@DBName) + N'.INFORMATION_SCHEMA.TABLES it ON t.name = it.TABLE_NAME AND s.name = it.TABLE_SCHEMA&#xA;        WHERE it.TABLE_TYPE = N''BASE TABLE''&#xA;          AND p.index_id IN (0,1)&#xA;        GROUP BY s.name, t.name'&#xA;&#xA;        -- Execute the dynamic SQL&#xA;        EXEC sp_executesql @SQL&#xA;    END TRY&#xA;    BEGIN CATCH&#xA;        PRINT N'Error occurred in database: ' + @DBName&#xA;        PRINT ERROR_MESSAGE()&#xA;    END CATCH&#xA;&#xA;    -- Fetch the next database&#xA;    FETCH NEXT FROM db_cursor INTO @DBName&#xA;END&#xA;&#xA;-- Close and deallocate the cursor&#xA;CLOSE db_cursor&#xA;DEALLOCATE db_cursor&#xA;&#xA;-- Select the combined results&#xA;SELECT DB_Name, Table_Name, Record_Count &#xA;FROM #Results&#xA;ORDER BY DB_Name, Table_Name"
          SQLTask:ResultType="ResultSetType_Rowset" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::ResultSet" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{40EB718E-9514-4D40-B436-3DE42841D47B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_968db78fc97e4ba08250993eb4f20900"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::HTMLBody,User::ResultSet,User::TableRowCount">
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.OleDb;
using System.Net.Mail;
using System.Net;
#endregion

namespace ST_968db78fc97e4ba08250993eb4f20900
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {

                String htmlBody = Dts.Variables["User::HTMLBody"].Value.ToString();
                htmlBody = "<html><body><p>Database Table Summary:</p><table border='1'><tr style='background-color: yellow; color: white;'><th>DB_Name</th><th>Table_Name</th><th>Record_Count</th></tr>";

                OleDbDataAdapter objDA = new OleDbDataAdapter();
                DataTable objDT = new DataTable();
                objDA.Fill(objDT, Dts.Variables["User::ResultSet"].Value); 
                foreach (DataRow dataRow in objDT.Rows)
                {
                    string dbName = dataRow["DB_Name"].ToString();
                    string tableName = dataRow["Table_Name"].ToString();
                    int rowCount = Convert.ToInt32(dataRow["Record_Count"]);

                    htmlBody += $"<tr><td>{dbName}</td><td>{tableName}</td><td>{rowCount}</td></tr>";
                }

                htmlBody += "</table></body></html>";

                // Dts.Variables["User::HTMLBody"].Value = htmlBody;


                String userName = "karan@intimetec.com";
               
                String password = "";
                // String password = "qxyoxpcbcdhayhwe";

                SmtpClient client = new SmtpClient();
                //client.Host = "";
                // host name is empty
                // client.Host = "smtp.gmail.com";
                client.Host = "192.168.4.220";
                client.Port = 587;
                client.EnableSsl = true;
                NetworkCredential mycredentials = new NetworkCredential(userName, password);

                client.Credentials = mycredentials;

                //MailAddress FromAddress = new MailAddress("deykaran07@gmail.com", "SSIS");
                MailAddress FromAddress = new MailAddress("tkaran@intimetec.com", "SSIS");

                MailMessage message = new MailMessage();
                message.From = FromAddress;
                message.To.Add("karan.dey@intimetec.com");
                message.Subject = "Database_Report";
                message.IsBodyHtml = true;
                message.Body = htmlBody;
                
                client.Send(message);




                Dts.TaskResult = (int)ScriptResults.Success;

            }
            catch (Exception ex)
            {
                // Log the error
                Dts.Events.FireError(0, "Script Task", ex.Message + "\n" + ex.StackTrace, string.Empty, 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_968db78fc97e4ba08250993eb4f20900.Properties.Settings.get_Default():ST_968db78fc97e4ba08250993eb4f20900.Properties.Sett" +
    "ings")]

namespace ST_968db78fc97e4ba08250993eb4f20900.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_968db78fc97e4ba08250993eb4f20900.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0B6E091F-5713-44CA-B449-EE9FE4DD2474}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_968db78fc97e4ba08250993eb4f20900</RootNamespace>
    <AssemblyName>ST_968db78fc97e4ba08250993eb4f20900</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_968db78fc97e4ba08250993eb4f20900</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_968db78fc97e4ba08250993eb4f20900</msb:DisplayName>
    <msb:ProjectId>{8ADFF27E-5539-41CF-B58F-C83D3E6BE0AD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_968db78fc97e4ba08250993eb4f20900.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_968db78fc97e4ba08250993eb4f20900")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP Inc.")]
[assembly: AssemblyProduct("ST_968db78fc97e4ba08250993eb4f20900")]
[assembly: AssemblyCopyright("Copyright @ HP Inc. 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_968db78fc97e4ba08250993eb4f20900.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_968db78fc97e4ba08250993eb4f20900.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_968db78fc97e4ba08250993eb4f20900.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_968db78fc97e4ba08250993eb4f20900.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_968db78fc97e4ba08250993eb4f20900.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_968db78fc97e4ba08250993eb4f20900.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIvxNmcAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAApjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFQ2AABPAAAAAEAAAJQEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAJQEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
NgAAAAAAAEgAAAACAAUA2CIAAMQSAAABAAAAAAAAAJw1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgDeAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKch8AAHAKcxUAAApzFgAACgsHAigQAAAKbxEAAApyfAEAcG8SAAAKbxMAAApvFwAA
CiYHbxgAAApvGQAAChMHK10RB28aAAAKdCUAAAElcpwBAHBvGwAACm8UAAAKEwglcqwBAHBvGwAA
Cm8UAAAKEwlywgEAcG8bAAAKKBwAAAoTCgZy3AEAcBEIEQkRCownAAABKB0AAAooHgAACgoRB28f
AAAKLZreFREHdRQAAAETCxELLAcRC28gAAAK3AZyOAIAcCgeAAAKCnJmAgBwDHKOAgBwDXMhAAAK
JXKQAgBwbyIAAAolIEsCAABvIwAACiUXbyQAAAoICXMlAAAKEwQlEQRvJgAACnKsAgBwctYCAHBz
JwAAChMFcygAAAoTBhEGEQVvKQAAChEGbyoAAApy4AIAcG8rAAAKEQZyEAMAcG8sAAAKEQYXby0A
AAoRBgZvLgAAChEGby8AAAoCKBAAAAoWbzAAAAreRRMMAigQAAAKbzEAAAoWcjADAHARDG8yAAAK
ckgDAHARDG8zAAAKKDQAAAp+NQAAChZvNgAACiYCKBAAAAoXbzAAAAreAAIoEAAAChZvMAAACioA
AEE0AAACAAAAXwAAAGoAAADJAAAAFQAAAAAAAAAAAAAAAAAAAIwBAACMAQAARQAAABUAAAEeAig3
AAAKKh4CKDgAAAoqrn4BAAAELR5yTAMAcNADAAACKDkAAApvOgAACnM7AAAKgAEAAAR+AQAABCoa
fgIAAAQqHgKAAgAABCoafgMAAAQqHgIoPAAACioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAAAQFAAAjfgAAcAUAAIgHAAAjU3RyaW5ncwAAAAD4DAAAwAMA
ACNVUwC4EAAAEAAAACNHVUlEAAAAyBAAAPwBAAAjQmxvYgAAAAAAAAACAAABVx2iAQkDAAAA+gEz
ABYAAAEAAAAvAAAABQAAAAYAAAAJAAAAAQAAADwAAAACAAAAEAAAAAEAAAACAAAAAwAAAAQAAAAB
AAAABQAAAAEAAAABAAAAAAAmBAEAAAAAAAYAtAKjBQYAQwOjBQYAAAKQBQ8AFwYAAAYALQLPBAYA
lwLPBAYAeALPBAYAKgPPBAYA1ALPBAYA7QLPBAYARALPBAYAXwJxAwoACAOzAwoAXAGzAw4AxABd
ABIA3APuBhIAlwYWBBIAuAAWBAYAaQV8BgYA1wB5BAYACQV5BAYAiQR5BAYA4wGQBQYA2wZ5BAYA
KgXDBQYAGgW6BBIAswEABBIAFAIABBIAkwGlBAYAyAGjBQoA7gOzAxYAWQYHARYAzgAHAQ4ATgVp
AA4A9wRdAA4AeAFdAA4AYQddAAYAKwd5BAYAJwB5BAYAjQN5BBIAFAcWBBIARQfuBhIA4QQWBAoA
OgWzAwYAJwF5BAYA4wB5BAYAdgfPBAAAAAAtAAAAAAABAAEAAQAQAJoEAQA5AAEAAQAAABAAygUm
BmEAAQADAAABEABjBiYGdQADAAcAAwEAAKsGAABZAAQACgARAI4E6gARAEwB7gARAJwA8gAGBlUA
9gBWgI8G+QBWgCwB+QBQIAAAAACGAKAEBgABAHAiAAAAAIYYgwUGAAEAeCIAAAAAgxiDBQYAAQCA
IgAAAACTCCYF/QABAKwiAAAAAJMINAECAQEAsyIAAAAAkwhAAQcBAQC7IgAAAACWCPkGDQECAMIi
AAAAAIYYgwUGAAIAyiIAAAAAkRiJBRIBAgAAAAEAawMJAIMFAQARAIMFBgAZAIMFCgApAIMFEAAx
AIMFEAA5AIMFEABBAIMFEABJAIMFEABRAIMFEABZAIMFEABhAIMFEABpAIMFBgC5AIMFBgDhAIMF
FQDxAIMFBgBxAKMGMgD5AFUGNwABAXAEPQAJAWEDRADBAIsDSAARAYMFBgB5AIMFBgARAU4ETAB5
AMQGUwAhAXUFWQCZAB8HRAApAXAEXgAxASUAYwBBAdQGaABBAc0GcACZAFgHdgChAKsBBgBJAYMF
BgBJATwHEABJATMHAQBJAWIEegCBAIMFfwBJAWwGhQCJAIMFfwCRAIMFBgCRAIAEjACRABMFkgBZ
AYQAEACRAOIGEACRAFMEegCRAGkHEABJAYgAmAD5AAUHAQD5ALkGngCpAKwASACpAI0ASABBAc0G
pABBAX8HqwBhAV8FrgBxAIMFBgDBAIMFBgBpAfUAtwBpAXIHwADJAIMFxgDpAIMFBgAIABQA4AAI
ABgA5QApAHMATQEuAAsAJQEuABMALgEuABsATQEuACMAVgEuACsAfwEuADMAfwEuADsAhQEuAEMA
VgEuAEsAkgEuAFMAfwEuAFsAsAFDAGMA5QBJAHMATQFhAHsA5QBjAGsA5QAbAAMAAQAEAAMAAAAq
BRYBAABUARsBAAD9BiABAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAAB9I/FXAAAAAAAA
AQAAAAQAAAAAAAAAAAAAAM4AewAAAAAAEAAAAAAAAAAAAAAA1wCUAwAAAAAEAAAAAAAAAAAAAADO
AF0AAAAAAAQAAAAAAAAAAAAAAM4AeQQAAAAAEAAAAAAAAAAAAAAA1wA2AAAAAAAAAAAAAQAAANQF
AAAFAAIAAAAAAABTVF85NjhkYjc4ZmM5N2U0YmEwODI1MDk5M2ViNGYyMDkwMABUb0ludDMyADxN
b2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFN5c3RlbS5EYXRh
AFN5c3RlbS5EYXRhLk9sZURiAG1zY29ybGliAEFkZABTZW5kAGdldF9TdGFja1RyYWNlAGRlZmF1
bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBNYWlsTWVzc2FnZQBEYXRhVGFibGUAVmFyaWFibGUASURp
c3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUA
cmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBJbnRlcm5hbERhdGFD
b2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dz
YWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRh
c2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBOZXR3b3JrQ3JlZGVudGlhbABTY3JpcHRPYmpl
Y3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNUXzk2OGRiNzhm
Yzk3ZTRiYTA4MjUwOTkzZWI0ZjIwOTAwLmRsbABGaWxsAHNldF9Jc0JvZHlIdG1sAHNldF9FbmFi
bGVTc2wAZ2V0X0l0ZW0AU3lzdGVtAHNldF9Gcm9tAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFp
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24ARXhjZXB0aW9uAGdl
dF9UbwBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIA
T2xlRGJEYXRhQWRhcHRlcgBGaXJlRXJyb3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3Rv
cgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vydmlj
ZXMAU3lzdGVtLlJlc291cmNlcwBTVF85NjhkYjc4ZmM5N2U0YmEwODI1MDk5M2ViNGYyMDkwMC5Q
cm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfOTY4ZGI3OGZj
OTdlNGJhMDgyNTA5OTNlYjRmMjA5MDAuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdz
AHNldF9DcmVkZW50aWFscwBTeXN0ZW0uQ29sbGVjdGlvbnMAU3VjY2VzcwBNYWlsQWRkcmVzcwBn
ZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBnZXRfUm93cwBDb25jYXQARm9ybWF0AE9i
amVjdABzZXRfU3ViamVjdABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFNt
dHBDbGllbnQAZ2V0X0N1cnJlbnQAQ29udmVydABzZXRfUG9ydABzZXRfSG9zdABJQ3JlZGVudGlh
bHNCeUhvc3QATW92ZU5leHQARGF0YVJvdwBzZXRfQm9keQBnZXRfQXNzZW1ibHkARW1wdHkAAAAA
AB1VAHMAZQByADoAOgBIAFQATQBMAEIAbwBkAHkAAIFbPABoAHQAbQBsAD4APABiAG8AZAB5AD4A
PABwAD4ARABhAHQAYQBiAGEAcwBlACAAVABhAGIAbABlACAAUwB1AG0AbQBhAHIAeQA6ADwALwBw
AD4APAB0AGEAYgBsAGUAIABiAG8AcgBkAGUAcgA9ACcAMQAnAD4APAB0AHIAIABzAHQAeQBsAGUA
PQAnAGIAYQBjAGsAZwByAG8AdQBuAGQALQBjAG8AbABvAHIAOgAgAHkAZQBsAGwAbwB3ADsAIABj
AG8AbABvAHIAOgAgAHcAaABpAHQAZQA7ACcAPgA8AHQAaAA+AEQAQgBfAE4AYQBtAGUAPAAvAHQA
aAA+ADwAdABoAD4AVABhAGIAbABlAF8ATgBhAG0AZQA8AC8AdABoAD4APAB0AGgAPgBSAGUAYwBv
AHIAZABfAEMAbwB1AG4AdAA8AC8AdABoAD4APAAvAHQAcgA+AAEfVQBzAGUAcgA6ADoAUgBlAHMA
dQBsAHQAUwBlAHQAAA9EAEIAXwBOAGEAbQBlAAAVVABhAGIAbABlAF8ATgBhAG0AZQAAGVIAZQBj
AG8AcgBkAF8AQwBvAHUAbgB0AABbPAB0AHIAPgA8AHQAZAA+AHsAMAB9ADwALwB0AGQAPgA8AHQA
ZAA+AHsAMQB9ADwALwB0AGQAPgA8AHQAZAA+AHsAMgB9ADwALwB0AGQAPgA8AC8AdAByAD4AAC08
AC8AdABhAGIAbABlAD4APAAvAGIAbwBkAHkAPgA8AC8AaAB0AG0AbAA+AAAnawBhAHIAYQBuAEAA
aQBuAHQAaQBtAGUAdABlAGMALgBjAG8AbQAAAQAbMQA5ADIALgAxADYAOAAuADQALgAyADIAMAAA
KXQAawBhAHIAYQBuAEAAaQBuAHQAaQBtAGUAdABlAGMALgBjAG8AbQAACVMAUwBJAFMAAC9rAGEA
cgBhAG4ALgBkAGUAeQBAAGkAbgB0AGkAbQBlAHQAZQBjAC4AYwBvAG0AAB9EAGEAdABhAGIAYQBz
AGUAXwBSAGUAcABvAHIAdAAAF1MAYwByAGkAcAB0ACAAVABhAHMAawAAAwoAAHFTAFQAXwA5ADYA
OABkAGIANwA4AGYAYwA5ADcAZQA0AGIAYQAwADgAMgA1ADAAOQA5ADMAZQBiADQAZgAyADAAOQAw
ADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAhz5l9KNP2Emu
5EKFyZtR8QAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERbRYHDQ4SPQ4OEkESRRJJEk0ODggSURJV
BCAAEn0FIAASgIEGIAESgIUcAyAAHAMgAA4GIAIIEj0cBSAAEoCNBCAAEk0EIAEcDgQAAQgcBwAE
Dg4cHBwFAAIODg4DIAACBCABAQIFIAIBDg4GIAEBEoCpBSABARJFBSAAEoCtBSABARJJBSAAEoCx
BgADDg4ODgIGDgggBQIIDg4OCAgAARKAtRGAuQUgABKAvQcgAgEOEoC9CLd6XFYZNOCJCImEXc2A
gMyRBAAAAAAEAQAAAAMGEmUDBhJpAwYSEAIGCAMGERQEAAASZQQAABJpBQABARJpBAAAEhADAAAB
BAgAEmUECAASaQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgB
AAIAAAAAACgBACNTVF85NjhkYjc4ZmM5N2U0YmEwODI1MDk5M2ViNGYyMDkwMAAABQEAAAAADAEA
B0hQIEluYy4AAB0BABhDb3B5cmlnaHQgQCBIUCBJbmMuIDIwMjQAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAfDYAAAAAAAAAAAAAljYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIg2
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAANgQAAAAAAAAAAAAANgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAPFXfSMAAAEA8Vd9Iz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBJYDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHIDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAwAAgAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAEgAUAAgAEkAbgBjAC4AAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAA
dABpAG8AbgAAAAAAUwBUAF8AOQA2ADgAZABiADcAOABmAGMAOQA3AGUANABiAGEAMAA4ADIANQAw
ADkAOQAzAGUAYgA0AGYAMgAwADkAMAAwAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAA
AAAxAC4AMAAuADkAMAA4ADUALgAyADIANQAxADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABO
AGEAbQBlAAAAUwBUAF8AOQA2ADgAZABiADcAOABmAGMAOQA3AGUANABiAGEAMAA4ADIANQAwADkA
OQAzAGUAYgA0AGYAMgAwADkAMAAwAC4AZABsAGwAAABWABkAAQBMAGUAZwBhAGwAQwBvAHAAeQBy
AGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABIAFAAIABJAG4AYwAuACAAMgAwADIA
NAAAAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBP
AHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AOQA2ADgAZABiADcAOABmAGMA
OQA3AGUANABiAGEAMAA4ADIANQAwADkAOQAzAGUAYgA0AGYAMgAwADkAMAAwAC4AZABsAGwAAABo
ACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADkANgA4AGQAYgA3ADgAZgBjADkA
NwBlADQAYgBhADAAOAAyADUAMAA5ADkAMwBlAGIANABmADIAMAA5ADAAMAAAAEIADwABAFAAcgBv
AGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAwADgANQAuADIAMgA1ADEAMwAAAAAA
RgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAwADgANQAu
ADIAMgA1ADEAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAKg2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{EA0FD240-2F4B-4BC8-B310-9017F93FA5DF}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Script Task" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="170,42"
          Id="Package\Execute SQL Task"
          TopLeft="160,62" />
        <NodeLayout
          Size="134,42"
          Id="Package\Script Task"
          TopLeft="483,78" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="330,83">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="153,16"
              Start="0,0"
              End="145.5,16">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="72.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="72.5,0"
                    Point2="76.5,0"
                    Point3="76.5,4" />
                  <mssgle:LineSegment
                    End="76.5,12" />
                  <mssgle:CubicBezierSegment
                    Point1="76.5,12"
                    Point2="76.5,16"
                    Point3="80.5,16" />
                  <mssgle:LineSegment
                    End="145.5,16" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>